openapi: "3.0.3"

info:
  title: "holos: ストレージAPI"
  version: ""

servers:
  - url: "http://localhost:8002"
    description: "localhost"
  - url: "http://storage-api:8000"
    description: "docker compose service"

paths:
  /health:
    get:
      summary: "ヘルスチェック"
      tags:
        - "health"
      responses:
        204:
          $ref: "#/components/responses/204"
  /volumes:
    post:
      summary: "ボリューム作成"
      tags:
        - "volumes"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
      requestBody:
        $ref: "#/components/requestBodies/create_volume"
      responses:
        201:
          $ref: "#/components/responses/create_volume"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
    get:
      summary: "ボリューム一覧取得"
      tags:
        - "volumes"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
      responses:
        200:
          $ref: "#/components/responses/get_volumes"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
  /volumes/{name}:
    put:
      summary: "ボリューム更新"
      tags:
        - "volumes"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
        - in: "path"
          name: "name"
          schema:
            type: "string"
          required: true
          description: "ボリューム名"
          example: "volume_name"
      requestBody:
        $ref: "#/components/requestBodies/update_volume"
      responses:
        200:
          $ref: "#/components/responses/update_volume"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
    delete:
      summary: "ボリューム削除"
      tags:
        - "volumes"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
        - in: "path"
          name: "name"
          schema:
            type: "string"
          required: true
          description: "ボリューム名"
          example: "volume_name"
      responses:
        204:
          $ref: "#/components/responses/204"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
    get:
      summary: "ボリューム単体取得"
      tags:
        - "volumes"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
        - in: "path"
          name: "name"
          schema:
            type: "string"
          required: true
          description: "ボリューム名"
          example: "volume_name"
      responses:
        200:
          $ref: "#/components/responses/get_volume"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
  /entries:
    post:
      summary: "エントリー作成"
      tags:
        - "entries"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
      requestBody:
        $ref: "#/components/requestBodies/create_entry"
      responses:
        201:
          $ref: "#/components/responses/create_entry"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
  /entries/{volumeName}:
    get:
      summary: "エントリー一覧取得"
      tags:
        - "entries"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
        - in: "path"
          name: "volumeName"
          schema:
            type: "string"
          required: true
          description: "ボリューム名"
          example: "volume_name"
        - in: "query"
          name: "prefix"
          schema:
            type: "string"
          description: "Keyで前方一致検索する際のprefix"
          example: "folder"
        - in: "query"
          name: "depth"
          schema:
            type: "integer"
          description: "Keyで前方一致検索する際に取得する階層の範囲"
          example: 1
      responses:
        200:
          $ref: "#/components/responses/get_entries"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
  /entries/{volumeName}/{key}:
    put:
      summary: "エントリー更新"
      tags:
        - "entries"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
        - in: "path"
          name: "volumeName"
          schema:
            type: "string"
          required: true
          description: "ボリューム名"
          example: "volume_name"
        - in: "path"
          name: "key"
          schema:
            type: "string"
          required: true
          description: "キー"
          example: "volume/entry.png"
      requestBody:
        $ref: "#/components/requestBodies/update_entry"
      responses:
        200:
          $ref: "#/components/responses/update_entry"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        409:
          $ref: "#/components/responses/409"
        500:
          $ref: "#/components/responses/500"
    delete:
      summary: "エントリー削除"
      tags:
        - "entries"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
        - in: "path"
          name: "volumeName"
          schema:
            type: "string"
          required: true
          description: "ボリューム名"
          example: "volume_name"
        - in: "path"
          name: "key"
          schema:
            type: "string"
          required: true
          description: "キー"
          example: "volume/entry.png"
      responses:
        204:
          $ref: "#/components/responses/204"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
    head:
      summary: "エントリー情報取得"
      tags:
        - "entries"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
        - in: "path"
          name: "volumeName"
          schema:
            type: "string"
          required: true
          description: "ボリューム名"
          example: "volume_name"
        - in: "path"
          name: "key"
          schema:
            type: "string"
          required: true
          description: "キー"
          example: "volume/entry.png"
      responses:
        200:
          description: "Success"
          headers:
            Content-Length:
              schema:
                type: "integer"
                example: 6937039
            Content-Type:
              schema:
                type: "string"
                example: "image/png"
            Last-Modified:
              schema:
                type: "string"
                example: "Wed, 07 May 2025 17:22:51 GMT"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"
    get:
      summary: "エントリー単体取得"
      tags:
        - "entries"
      security:
        - sessionAuth: []
        - accessKeyAuth: []
      parameters:
        - in: "header"
          name: "Authorization"
          schema:
            type: "string"
          required: true
          description: "セッショントークンまたはアクセスキー"
          example: "Session 1Ty1HKTPKTt8xEi-_3HTbWf2SCHOdqOS"
        - in: "path"
          name: "volumeName"
          schema:
            type: "string"
          required: true
          description: "ボリューム名"
          example: "volume_name"
        - in: "path"
          name: "key"
          schema:
            type: "string"
          required: true
          description: "キー"
          example: "volume/entry.png"
      responses:
        200:
          $ref: "#/components/responses/get_entry"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        500:
          $ref: "#/components/responses/500"

components:
  securitySchemes:
    sessionAuth:
      type: http
      scheme: Session
    accessKeyAuth:
      type: http
      scheme: AccessKey

  schemas:
    created_at:
      type: "string"
      description: "作成日時"
      format: "date-time"
      example: "2017-07-21T17:32:28Z"
      readOnly: true
    updated_at:
      type: "string"
      description: "更新日時"
      format: "date-time"
      example: "2017-07-21T17:32:28Z"
      readOnly: true
    volume:
      type: "object"
      properties:
        id:
          type: "string"
          description: "ID"
          example: "c99fc6e0-6e62-4de2-8a7e-5c608ceaa8c6"
          readOnly: true
        name:
          type: "string"
          description: "ボリューム名"
          example: "volume_name"
        is_public:
          type: "boolean"
          description: "公開フラグ"
          example: false
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
      required:
        - "id"
        - "name"
        - "is_public"
        - "created_at"
        - "updated_at"
    entry:
      type: "object"
      properties:
        id:
          type: "string"
          description: "ID"
          example: "c99fc6e0-6e62-4de2-8a7e-5c608ceaa8c6"
          readOnly: true
        volume_id:
          type: "string"
          description: "ボリュームID"
          example: "c99fc6e0-6e62-4de2-8a7e-5c608ceaa8c6"
        volume_name:
          type: "string"
          description: "ボリューム名"
          example: "volume"
          writeOnly: true
        key:
          type: "string"
          description: "キー"
          example: "volume/entry.png"
        size:
          type: "number"
          description: "サイズ"
          example: 1000
          readOnly: true
        type:
          type: "string"
          description: "タイプ"
          example: "image/png"
          readOnly: true
        created_at:
          $ref: "#/components/schemas/created_at"
        updated_at:
          $ref: "#/components/schemas/updated_at"
      required:
        - "id"
        - "volume_id"
        - "volume_name"
        - "key"
        - "size"
        - "type"
        - "created_at"
        - "updated_at"

  requestBodies:
    create_volume:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/volume"
    update_volume:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/volume"
    create_entry:
      required: true
      content:
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/entry"
              - type: "object"
                properties:
                  volume_id:
                    readOnly: true
                  file:
                    type: "string"
                    format: "byte"
                    description: "ファイル"
                required:
                  - "file"
    update_entry:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/entry"
              - type: "object"
                properties:
                  volume_id:
                    readOnly: true
                  volume_name:
                    readOnly: true

  responses:
    create_volume:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/volume"
    update_volume:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/volume"
    get_volume:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/volume"
    get_volumes:
      description: "Success"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              volumes:
                type: "array"
                items:
                  $ref: "#/components/schemas/volume"
    create_entry:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/entry"
    update_entry:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/entry"
    get_entry:
      description: "Success"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/entry"
    get_entries:
      description: "Success"
      content:
        application/json:
          schema:
            type: "object"
            properties:
              entries:
                type: "array"
                items:
                  $ref: "#/components/schemas/entry"
    204:
      description: "Success"
    400:
      description: "Bad Request"
      content:
        text/plain:
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "bad request"
    401:
      description: "Unauthorized"
      content:
        text/plain:
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "unauthorized"
    403:
      description: "Forbidden"
      content:
        text/plain:
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "forbidden"
    404:
      description: "Resource Not Found"
      content:
        text/plain:
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "resource not found"
    409:
      description: "Conflict"
      content:
        text/plain:
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "conflict"
    500:
      description: "Internal Server Error"
      content:
        text/plain:
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "internal server error"
