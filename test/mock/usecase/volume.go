// Code generated by MockGen. DO NOT EDIT.
// Source: volume.go
//
// Generated by this command:
//
//	mockgen -source=volume.go -package=usecase -destination=../../../../test/mock/usecase/volume.go
//

// Package usecase is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	dto "github.com/atsumarukun/holos-storage-api/internal/app/api/usecase/dto"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockVolumeUsecase is a mock of VolumeUsecase interface.
type MockVolumeUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockVolumeUsecaseMockRecorder
	isgomock struct{}
}

// MockVolumeUsecaseMockRecorder is the mock recorder for MockVolumeUsecase.
type MockVolumeUsecaseMockRecorder struct {
	mock *MockVolumeUsecase
}

// NewMockVolumeUsecase creates a new mock instance.
func NewMockVolumeUsecase(ctrl *gomock.Controller) *MockVolumeUsecase {
	mock := &MockVolumeUsecase{ctrl: ctrl}
	mock.recorder = &MockVolumeUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVolumeUsecase) EXPECT() *MockVolumeUsecaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockVolumeUsecase) Create(arg0 context.Context, arg1 uuid.UUID, arg2 string, arg3 bool) (*dto.VolumeDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*dto.VolumeDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockVolumeUsecaseMockRecorder) Create(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockVolumeUsecase)(nil).Create), arg0, arg1, arg2, arg3)
}

// Update mocks base method.
func (m *MockVolumeUsecase) Update(arg0 context.Context, arg1, arg2 uuid.UUID, arg3 string, arg4 bool) (*dto.VolumeDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*dto.VolumeDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockVolumeUsecaseMockRecorder) Update(arg0, arg1, arg2, arg3, arg4 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockVolumeUsecase)(nil).Update), arg0, arg1, arg2, arg3, arg4)
}
