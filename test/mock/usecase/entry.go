// Code generated by MockGen. DO NOT EDIT.
// Source: entry.go
//
// Generated by this command:
//
//	mockgen -source=entry.go -package=usecase -destination=../../../../test/mock/usecase/entry.go
//

// Package usecase is a generated GoMock package.
package usecase

import (
	context "context"
	io "io"
	reflect "reflect"

	dto "github.com/atsumarukun/holos-storage-api/internal/app/api/usecase/dto"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockEntryUsecase is a mock of EntryUsecase interface.
type MockEntryUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockEntryUsecaseMockRecorder
	isgomock struct{}
}

// MockEntryUsecaseMockRecorder is the mock recorder for MockEntryUsecase.
type MockEntryUsecaseMockRecorder struct {
	mock *MockEntryUsecase
}

// NewMockEntryUsecase creates a new mock instance.
func NewMockEntryUsecase(ctrl *gomock.Controller) *MockEntryUsecase {
	mock := &MockEntryUsecase{ctrl: ctrl}
	mock.recorder = &MockEntryUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEntryUsecase) EXPECT() *MockEntryUsecaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockEntryUsecase) Create(arg0 context.Context, arg1, arg2 uuid.UUID, arg3 string, arg4 uint64, arg5 io.Reader) (*dto.EntryDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*dto.EntryDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockEntryUsecaseMockRecorder) Create(arg0, arg1, arg2, arg3, arg4, arg5 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockEntryUsecase)(nil).Create), arg0, arg1, arg2, arg3, arg4, arg5)
}
